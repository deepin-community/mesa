From dca68f5b93c945664510b993e7d0d42f9f6831c8 Mon Sep 17 00:00:00 2001
From: Icenowy Zheng <uwu@icenowy.me>
Date: Tue, 26 Nov 2024 10:50:10 +0800
Subject: [PATCH 2/8] zink: use lazy descriptors for IMG proprietary drivers

When using Zink with VK_EXT_descriptor_buffer enabled on IMG proprietary
drivers, the rendering behavior is incorrect and uniforms are not
updated properly (the gears of es2gears_x11 become all red and
overlaps).

Use lazy descriptors for IMG proprietary driver unless explicitly
overriden for testing purpose.

Signed-off-by: Icenowy Zheng <uwu@icenowy.me>
---
 src/gallium/drivers/zink/zink_screen.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/gallium/drivers/zink/zink_screen.c b/src/gallium/drivers/zink/zink_screen.c
index c0b2ee4ff97..56b0c350fe0 100644
--- a/src/gallium/drivers/zink/zink_screen.c
+++ b/src/gallium/drivers/zink/zink_screen.c
@@ -3673,11 +3673,16 @@ zink_internal_create_screen(const struct pipe_screen_config *config, int64_t dev
       }
    }
    if (zink_descriptor_mode == ZINK_DESCRIPTOR_MODE_AUTO) {
+      switch(screen->info.driver_props.driverID) {
       /* descriptor buffer is not performant with virt yet */
-      if (screen->info.driver_props.driverID == VK_DRIVER_ID_MESA_VENUS)
+      case VK_DRIVER_ID_MESA_VENUS:
+      /* db descriptor mode is known to be broken on IMG proprietary drivers */
+      case VK_DRIVER_ID_IMAGINATION_PROPRIETARY:
          zink_descriptor_mode = ZINK_DESCRIPTOR_MODE_LAZY;
-      else
+	 break;
+      default:
          zink_descriptor_mode = can_db ? ZINK_DESCRIPTOR_MODE_DB : ZINK_DESCRIPTOR_MODE_LAZY;
+      }
    }
    if (zink_descriptor_mode == ZINK_DESCRIPTOR_MODE_DB) {
       const uint32_t sampler_size = MAX2(screen->info.db_props.combinedImageSamplerDescriptorSize, screen->info.db_props.robustUniformTexelBufferDescriptorSize);
-- 
2.49.0

