From 82dda2180624dea25887af405840297b593af71f Mon Sep 17 00:00:00 2001
From: Icenowy Zheng <uwu@icenowy.me>
Date: Thu, 16 Jan 2025 09:05:31 +0800
Subject: [PATCH] zink: Do not use demote on IMG blobs

The implementation of demote in IMG blobs seems to be a piece of hack,
and the current use of it in Zink leads to assertion failure with
information "Uniflex does not support demote and terminate in the same
shader".

Disable usage of demote for IMG blobs.

Signed-off-by: Icenowy Zheng <uwu@icenowy.me>
Part-of: <https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/33051>
---
 src/gallium/drivers/zink/zink_compiler.c |  3 ++-
 src/gallium/drivers/zink/zink_screen.c   | 15 +++++++++++++--
 src/gallium/drivers/zink/zink_types.h    |  1 +
 3 files changed, 16 insertions(+), 3 deletions(-)

--- a/src/gallium/drivers/zink/zink_compiler.c
+++ b/src/gallium/drivers/zink/zink_compiler.c
@@ -1433,7 +1433,8 @@
        zink_driverid(screen) == VK_DRIVER_ID_AMD_PROPRIETARY)
       screen->nir_options.lower_doubles_options = nir_lower_dmod;
 
-   if (screen->info.have_EXT_shader_demote_to_helper_invocation)
+   if (screen->info.have_EXT_shader_demote_to_helper_invocation &&
+       !screen->driver_compiler_workarounds.broken_demote)
       screen->nir_options.discard_is_demote = true;
 }
 
--- a/src/gallium/drivers/zink/zink_screen.c
+++ b/src/gallium/drivers/zink/zink_screen.c
@@ -752,6 +752,9 @@
    case PIPE_CAP_DEMOTE_TO_HELPER_INVOCATION:
       return screen->spirv_version >= SPIRV_VERSION(1, 6) ||
              screen->info.have_EXT_shader_demote_to_helper_invocation;
+      return (screen->spirv_version >= SPIRV_VERSION(1, 6) ||
+             screen->info.have_EXT_shader_demote_to_helper_invocation) &&
+             !screen->driver_compiler_workarounds.broken_demote;
 
    case PIPE_CAP_SAMPLE_SHADING:
       return screen->info.feats.features.sampleRateShading;
@@ -3003,6 +3006,16 @@
       break;
    }
 
+   /* these drivers do not implement demote properly */
+   switch (zink_driverid(screen)) {
+   case VK_DRIVER_ID_IMAGINATION_PROPRIETARY:
+      screen->driver_compiler_workarounds.broken_demote = true;
+      break;
+   default:
+      screen->driver_compiler_workarounds.broken_demote = false;
+      break;
+   }
+
    /* When robust contexts are advertised but robustImageAccess2 is not available */
    screen->driver_compiler_workarounds.lower_robustImageAccess2 =
       !screen->info.rb2_feats.robustImageAccess2 &&
--- a/src/gallium/drivers/zink/zink_types.h
+++ b/src/gallium/drivers/zink/zink_types.h
@@ -1534,6 +1534,7 @@
       bool needs_zs_shader_swizzle;
       bool needs_sanitised_layer;
       bool io_opt;
+      bool broken_demote;
    } driver_compiler_workarounds;
    struct {
       bool broken_l4a4;
